{
  "root": true,
  "env": {
    "node": true,
    "jest": true
  },
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": ["./tsconfig.json"]
  },
  "extends": [
    "next",
    // "airbnb-typescript/base",
    "plugin:@typescript-eslint/recommended", // Uses the recommended rules from the @typescript-eslint/eslint-plugin
    // "prettier/@typescript-eslint", // Uses eslint-config-prettier to disable ESLint rules from @typescript-eslint/eslint-plugin that would conflict with prettier
    "plugin:prettier/recommended", // Enables eslint-plugin-prettier and eslint-config-prettier. This will display prettier errors as ESLint errors. Make sure this is always the last configuration in the extends array.
    "plugin:@next/next/recommended"
  ],
  "plugins": ["import", "@typescript-eslint"],
  "rules": {
    // "comma-dangle": 0,
    // "no-underscore-dangle": 0,
    // "no-param-reassign": 0,
    // "no-return-assign": 0,
    // "camelcase": 0,
    // "import/extensions": 0,
    // "@typescript-eslint/no-redeclare": 0,
    "react/react-in-jsx-scope": "off",
    "@typescript-eslint/naming-convention": "off",
    "@typescript-eslint/ban-ts-comment": "off",
    "@typescript-eslint/no-explicit-any": "off",
    "@typescript-eslint/explicit-function-return-types": "off",
    "@typescript-eslint/explicit-module-boundary-types": "off"
  },
  "settings": {
    "import/parsers": {
      "@typescript-eslint/parser": [".ts", ".tsx"]
    },
    "import/resolver": {
      "typescript": {}
    }
  }
}
